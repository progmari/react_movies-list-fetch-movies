{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","api/getMovieFromServer.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","addMovie","useState","setTitle","setMovie","searchError","setSearchError","htmlFor","type","id","placeholder","value","onChange","event","target","onClick","fetch","then","response","ok","Error","status","statusText","json","getMivieFromServer","result","Response","Title","Plot","Poster","imdbID","App","data","setMovies","newMovie","some","currentMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c9ca15e3.chunk.js","sourcesContent":["import React from 'react';\r\nimport './MovieCard.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const MovieCard = ({\r\n  title,\r\n  description = '',\r\n  imgUrl,\r\n  imdbUrl,\r\n}) => (\r\n  <div className=\"card\">\r\n    <div className=\"card-image\">\r\n      <figure className=\"image is-4by3\">\r\n        <img\r\n          src={imgUrl}\r\n          alt=\"Film logo\"\r\n        />\r\n      </figure>\r\n    </div>\r\n    <div className=\"card-content\">\r\n      <div className=\"media\">\r\n        <div className=\"media-left\">\r\n          <figure className=\"image is-48x48\">\r\n            <img\r\n              src=\"images/imdb-logo.jpeg\"\r\n              alt=\"imdb\"\r\n            />\r\n          </figure>\r\n        </div>\r\n        <div className=\"media-content\">\r\n          <p className=\"title is-8\">{title}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"content\">\r\n        {description}\r\n        <br />\r\n        <a href={imdbUrl}>IMDB</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nMovieCard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string.isRequired,\r\n  imgUrl: PropTypes.string.isRequired,\r\n  imdbUrl: PropTypes.string.isRequired,\r\n};\r\n","import React from 'react';\r\n\r\nimport './MoviesList.scss';\r\nimport PropTypes from 'prop-types';\r\nimport { MovieCard } from '../MovieCard';\r\n\r\nexport const MoviesList = ({\r\n  movies = [],\r\n}) => (\r\n  <div className=\"movies\">\r\n    {movies.map(movie => (\r\n      <MovieCard key={movie.imdbId} {...movie} />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nMoviesList.propTypes = {\r\n  movies: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      imdbId: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n};\r\n","import React, { useState } from 'react';\nimport className from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport { getMivieFromServer } from '../../api/getMovieFromServer';\n\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\n\nexport const FindMovie = ({ addMovie }) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState(null);\n  const [searchError, setSearchError] = useState(false);\n\n  const sendRequest = () => {\n    getMivieFromServer(title)\n      // eslint-disable-next-line consistent-return\n      .then((result) => {\n        if (result.Response === 'False') {\n          setSearchError(true);\n          setMovie(null);\n\n          return;\n        }\n\n        const {\n          Title,\n          Plot,\n          Poster,\n          imdbID,\n        } = result;\n\n        setMovie({\n          title: Title,\n          description: Plot,\n          imgUrl: Poster,\n          imdbUrl: `https://www.imdb.com/title/${imdbID}/`,\n          imdbId: imdbID,\n        });\n\n        setSearchError(false);\n\n        setTitle('');\n      });\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={className(\n                'input',\n                { 'is-danger': searchError },\n              )}\n              value={title}\n              onChange={(event) => {\n                setTitle(event.target.value);\n                setSearchError(false);\n              }}\n            />\n          </div>\n\n          { searchError && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={sendRequest}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                addMovie(movie);\n                setMovie(null);\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        {movie && (\n          <>\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard {...movie} />\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","const BASE_URL = `https://www.omdbapi.com/?apikey=5a5359e&t=`;\n\nexport const getMivieFromServer = (title) => {\n  const url = BASE_URL + title;\n\n  return fetch(url)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n};\n","import React, { useState } from 'react';\n\nimport './App.scss';\n\nimport data from './api/movies.json';\n\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n\n  const addMovie = (newMovie) => {\n    const { imdbUrl } = newMovie;\n    const isUnique = movies.some(movie => movie.imdbUrl === imdbUrl);\n\n    if (!isUnique === false) {\n      return;\n    }\n\n    setMovies(currentMovies => [...currentMovies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bulma/css/bulma.css';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}